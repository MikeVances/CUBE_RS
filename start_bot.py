#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ Telegram Bot –¥–ª—è –ö–£–ë-1063
–ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫: python start_bot.py
"""

import os
import sys
import asyncio
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –º–æ–¥—É–ª—è–º
script_dir = Path(__file__).parent
sys.path.insert(0, str(script_dir))
sys.path.insert(0, str(script_dir / 'telegram_bot'))

def setup_logging():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        handlers=[
            logging.FileHandler('telegram_bot.log', encoding='utf-8'),
            logging.StreamHandler()
        ]
    )

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    token = os.getenv('TELEGRAM_BOT_TOKEN')
    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω:")
        print("   export TELEGRAM_BOT_TOKEN='your_bot_token_here'")
        print("   –∏–ª–∏")
        print("   set TELEGRAM_BOT_TOKEN=your_bot_token_here  (Windows)")
        return False
    
    print(f"‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞–π–¥–µ–Ω: {token[:10]}...{token[-5:]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if not Path('kub_commands.db').exists():
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö kub_commands.db –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞:")
        print("   python scripts/create_base_db.py")
        print("   python scripts/init_telegram_db.py")
        return False
    
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥—É–ª–∏
    required_modules = [
        'telegram_bot/bot_main.py',
        'telegram_bot/bot_database.py', 
        'telegram_bot/bot_permissions.py',
        'telegram_bot/bot_utils.py'
    ]
    
    for module in required_modules:
        if not Path(module).exists():
            print(f"‚ùå –§–∞–π–ª {module} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
    
    print("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –±–æ—Ç–∞ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º python-telegram-bot
    try:
        import telegram
        print(f"‚úÖ python-telegram-bot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Å–∏—è {telegram.__version__})")
    except ImportError:
        print("‚ùå python-telegram-bot –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install python-telegram-bot")
        return False
    
    return True

def show_bot_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    print("\n" + "=" * 60)
    print("ü§ñ TELEGRAM BOT –î–õ–Ø –ö–£–ë-1063")
    print("=" * 60)
    print("üìù –§—É–Ω–∫—Ü–∏–∏:")
    print("   ‚Ä¢ –ß—Ç–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏–π –¥–∞—Ç—á–∏–∫–æ–≤")
    print("   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã")
    print("   ‚Ä¢ –°–±—Ä–æ—Å –∞–≤–∞—Ä–∏–π (–¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤)")
    print("   ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞–º–∏ (–¥–ª—è –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤)")
    print("   ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
    print("")
    print("üîß –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:")
    print("   ‚Ä¢ UnifiedKUBSystem - –æ—Å–Ω–æ–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")
    print("   ‚Ä¢ SQLite –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
    print("   ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞—É–¥–∏—Ç–∞ –∫–æ–º–∞–Ω–¥")
    print("   ‚Ä¢ –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")
    print("")
    print("üìä –£—Ä–æ–≤–Ω–∏ –¥–æ—Å—Ç—É–ø–∞:")
    print("   ‚Ä¢ user     - —Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ")
    print("   ‚Ä¢ operator - —á—Ç–µ–Ω–∏–µ + —Å–±—Ä–æ—Å –∞–≤–∞—Ä–∏–π")
    print("   ‚Ä¢ admin    - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ + –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print("   ‚Ä¢ engineer - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø")
    print("=" * 60)

def check_system_health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüè• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
        from telegram_bot.bot_database import TelegramBotDB
        db = TelegramBotDB()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        users = db.get_all_users()
        print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º UnifiedKUBSystem
        from modbus.unified_system import UnifiedKUBSystem
        system = UnifiedKUBSystem()
        print("‚úÖ UnifiedKUBSystem –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_logging()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    show_bot_info()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    if not check_requirements():
        print("\nüí• –ù–µ –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É
    if not check_system_health():
        print("\nüí• –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        return
    
    print("\nüöÄ –ó–∞–ø—É—Å–∫ Telegram Bot...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        from telegram_bot.bot_main import KUBTelegramBot
        
        token = os.getenv('TELEGRAM_BOT_TOKEN')
        bot = KUBTelegramBot(token)
        
        print("‚úÖ –ë–æ—Ç —Å–æ–∑–¥–∞–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É...")
        print("‚ö†Ô∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        print("")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º
        await bot.start_bot()
        
    except KeyboardInterrupt:
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        try:
            await bot.stop_bot()
        except:
            pass
        print("‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logging.exception("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞")

def install_requirements():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"""
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ python-telegram-bot...")
    
    import subprocess
    
    try:
        subprocess.check_call([
            sys.executable, '-m', 'pip', 'install', 
            'python-telegram-bot[all]'
        ])
        print("‚úÖ python-telegram-bot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        return False

if __name__ == "__main__":
    print("üéØ –ó–ê–ü–£–°–ö TELEGRAM BOT –î–õ–Ø –ö–£–ë-1063")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        if sys.argv[1] == "--install":
            install_requirements()
            sys.exit(0)
        elif sys.argv[1] == "--check":
            check_requirements()
            check_system_health()
            sys.exit(0)
        elif sys.argv[1] == "--help":
            print("\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
            print("  python start_bot.py           # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞")
            print("  python start_bot.py --install # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
            print("  python start_bot.py --check   # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
            print("  python start_bot.py --help    # –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞")
            sys.exit(0)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        print(f"\nüí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        logging.exception("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ")