#!/usr/bin/env python3
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Telegram Bot
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

def test_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"""
    print("üß™ –¢–ï–°–¢ –ò–ú–ü–û–†–¢–û–í")
    print("=" * 50)
    
    tests = [
        ("telegram_bot.bot_database", "TelegramBotDB"),
        ("telegram_bot.bot_permissions", "check_user_permission"),
        ("telegram_bot.bot_utils", "format_sensor_data"),
        ("telegram_bot.bot_main", "KUBTelegramBot"),
    ]
    
    passed = 0
    for module, component in tests:
        try:
            exec(f"from {module} import {component}")
            print(f"‚úÖ {module}.{component}")
            passed += 1
        except Exception as e:
            print(f"‚ùå {module}.{component}: {e}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∏–º–ø–æ—Ä—Ç–æ–≤: {passed}/{len(tests)}")
    return passed == len(tests)

def test_database():
    """–¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüß™ –¢–ï–°–¢ –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    try:
        from telegram_bot.bot_database import TelegramBotDB
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É
        test_db = "test_telegram.db"
        if Path(test_db).exists():
            Path(test_db).unlink()
        
        db = TelegramBotDB(test_db)
        
        # –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        success = db.register_user(
            telegram_id=123456789,
            username="test_user",
            first_name="Test",
            last_name="User"
        )
        print(f"  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {'‚úÖ' if success else '‚ùå'}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db.get_user(123456789)
        print(f"  –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {'‚úÖ' if user else '‚ùå'}")
        
        # –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥
        db.log_user_command(123456789, "test", None, True)
        print("  –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥: ‚úÖ")
        
        # –¢–µ—Å—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        permissions = db.get_access_permissions("user")
        print(f"  –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: {'‚úÖ' if permissions else '‚ùå'}")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É
        Path(test_db).unlink()
        
        print("üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑—ã: {e}")
        return False

def test_permissions():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"""
    print("\nüß™ –¢–ï–°–¢ –ü–†–ê–í –î–û–°–¢–£–ü–ê")
    print("=" * 50)
    
    try:
        from telegram_bot.bot_database import TelegramBotDB
        from telegram_bot.bot_permissions import check_user_permission, check_command_rate_limit
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É
        test_db = "test_permissions.db"
        if Path(test_db).exists():
            Path(test_db).unlink()
        
        db = TelegramBotDB(test_db)
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.register_user(123456789, "test_user", "Test", "User")
        
        # –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤
        can_read = check_user_permission(123456789, "read", db)
        print(f"  –ü—Ä–∞–≤–∞ –Ω–∞ —á—Ç–µ–Ω–∏–µ: {'‚úÖ' if can_read else '‚ùå'}")
        
        # –¢–µ—Å—Ç –ª–∏–º–∏—Ç–∞ –∫–æ–º–∞–Ω–¥
        allowed, message = check_command_rate_limit(123456789, db)
        print(f"  –õ–∏–º–∏—Ç –∫–æ–º–∞–Ω–¥: {'‚úÖ' if allowed else '‚ùå'} ({message})")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É
        Path(test_db).unlink()
        
        print("üìä –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: ‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤: {e}")
        return False

def test_utils():
    """–¢–µ—Å—Ç —É—Ç–∏–ª–∏—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nüß™ –¢–ï–°–¢ –£–¢–ò–õ–ò–¢")
    print("=" * 50)
    
    try:
        from telegram_bot.bot_utils import (
            format_sensor_data, format_system_stats, 
            build_main_menu, error_message
        )
        from datetime import datetime
        
        # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        test_data = {
            'temp_inside': 23.5,
            'humidity': 65.0,
            'co2': 2500,
            'connection_status': 'connected',
            'timestamp': datetime.now().isoformat()
        }
        
        formatted = format_sensor_data(test_data)
        print(f"  –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: {'‚úÖ' if formatted and '23.5¬∞C' in formatted else '‚ùå'}")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é
        menu = build_main_menu("admin")
        print(f"  –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é: {'‚úÖ' if menu and len(menu.inline_keyboard) > 0 else '‚ùå'}")
        
        # –¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
        error_msg = error_message("–¢–µ—Å—Ç")
        print(f"  –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö: {'‚úÖ' if '‚ùå' in error_msg else '‚ùå'}")
        
        print("üìä –£—Ç–∏–ª–∏—Ç—ã: ‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É—Ç–∏–ª–∏—Ç: {e}")
        return False

def test_main_class():
    """–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –±–æ—Ç–∞"""
    print("\nüß™ –¢–ï–°–¢ –û–°–ù–û–í–ù–û–ì–û –ö–õ–ê–°–°–ê")
    print("=" * 50)
    
    try:
        from telegram_bot.bot_main import KUBTelegramBot
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —Ñ–∏–∫—Ç–∏–≤–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
        bot = KUBTelegramBot("123456789:FAKE_TOKEN_FOR_TESTING")
        
        print(f"  –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞: {'‚úÖ' if bot else '‚ùå'}")
        print(f"  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {'‚úÖ' if bot.bot_db else '‚ùå'}")
        print(f"  –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {'‚úÖ' if bot.config else '‚ùå'}")
        
        print("üìä –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å: ‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞: {e}")
        return False

def test_file_structure():
    """–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤"""
    print("\nüß™ –¢–ï–°–¢ –°–¢–†–£–ö–¢–£–†–´ –§–ê–ô–õ–û–í")
    print("=" * 50)
    
    required_files = [
        "telegram_bot/bot_main.py",
        "telegram_bot/bot_database.py",
        "telegram_bot/bot_permissions.py",
        "telegram_bot/bot_utils.py",
        "telegram_bot/__init__.py",
    ]
    
    passed = 0
    for file_path in required_files:
        if Path(file_path).exists():
            print(f"‚úÖ {file_path}")
            passed += 1
        else:
            print(f"‚ùå {file_path} - –ù–ï –ù–ê–ô–î–ï–ù")
    
    print(f"\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤: {passed}/{len(required_files)}")
    return passed == len(required_files)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM BOT")
    print("=" * 70)
    
    tests = [
        ("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤", test_file_structure),
        ("–ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π", test_imports),
        ("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", test_database),
        ("–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞", test_permissions),
        ("–£—Ç–∏–ª–∏—Ç—ã", test_utils),
        ("–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å", test_main_class),
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüîç {test_name.upper()}")
        try:
            if test_func():
                passed += 1
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 70)
    print("üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 70)
    
    if passed == total:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ Telegram Bot –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        status = "–ì–û–¢–û–í"
    else:
        print(f"‚ö†Ô∏è –ü–†–û–ô–î–ï–ù–û –¢–ï–°–¢–û–í: {passed}/{total}")
        print("‚ùå –¢—Ä–µ–±—É—é—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º!")
        status = "–¢–†–ï–ë–£–ï–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô"
    
    print(f"\nüéØ –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´: {status}")
    print("=" * 70)
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if passed == total:
        print("\nüìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("1. üîë –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞: —Å–æ–∑–¥–∞–π—Ç–µ config/bot_secrets.json")
        print("2. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python start_bot.py")
        print("3. üì± –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤ Telegram")
        print("4. üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: tail -f telegram_bot.log")
    else:
        print("\nüîß –ù–ï–û–ë–•–û–î–ò–ú–´–ï –î–ï–ô–°–¢–í–ò–Ø:")
        print("1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –ø—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞—Ö")
        print("2. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è")
    
    return passed == total

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)