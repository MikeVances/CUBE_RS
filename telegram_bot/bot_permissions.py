#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Telegram Bot
"""

import logging
from typing import Optional, List, Tuple  # ‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω Tuple –∏–º–ø–æ—Ä—Ç
from bot_database import TelegramBotDB

logger = logging.getLogger(__name__)

def check_user_permission(telegram_id: int, action: str, bot_db: TelegramBotDB) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    
    Args:
        telegram_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
        action: –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è ('read', 'write', 'reset_alarms')
        bot_db: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞
        
    Returns:
        bool: True –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = bot_db.get_user(telegram_id)
        if not user:
            logger.warning(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        if not user.get('is_active', True):
            logger.warning(f"üîí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞
        access_level = user.get('access_level', 'user')
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞
        permissions = bot_db.get_access_permissions(access_level)
        if not permissions:
            logger.error(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —É—Ä–æ–≤–Ω—è {access_level}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
        if action == 'read':
            return permissions.get('can_read', False)
        elif action == 'write':
            return permissions.get('can_write', False)
        elif action == 'reset_alarms':
            return permissions.get('can_reset_alarms', False)
        else:
            logger.warning(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {action}")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ {telegram_id}: {e}")
        return False

def check_command_rate_limit(telegram_id: int, bot_db: TelegramBotDB) -> Tuple[bool, str]:  # ‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: tuple -> Tuple
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ –∫–æ–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Returns:
        Tuple: (—Ä–∞–∑—Ä–µ—à–µ–Ω–æ, —Å–æ–æ–±—â–µ–Ω–∏–µ)
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
        commands_last_hour = bot_db.get_user_command_count_last_hour(telegram_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –ª–∏–º–∏—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = bot_db.get_user(telegram_id)
        if not user:
            return False, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
        
        access_level = user.get('access_level', 'user')
        
        # –õ–∏–º–∏—Ç—ã –ø–æ —É—Ä–æ–≤–Ω—è–º –¥–æ—Å—Ç—É–ø–∞
        limits = {
            'user': 5,
            'operator': 20,
            'admin': 50,
            'engineer': 100
        }
        
        limit = limits.get(access_level, 5)
        
        if commands_last_hour >= limit:
            return False, f"–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∫–æ–º–∞–Ω–¥ ({commands_last_hour}/{limit} –∑–∞ —á–∞—Å)"
        
        return True, f"–ö–æ–º–∞–Ω–¥ –∑–∞ —á–∞—Å: {commands_last_hour}/{limit}"
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–∞ –∫–æ–º–∞–Ω–¥ {telegram_id}: {e}")
        return False, "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–∞"

def get_user_access_level(telegram_id: int, bot_db: TelegramBotDB) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        user = bot_db.get_user(telegram_id)
        if user:
            return user.get('access_level', 'user')
        return 'user'
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ {telegram_id}: {e}")
        return 'user'

# =============================================================================
# –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–î–£–õ–Ø
# =============================================================================

def test_bot_permissions():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ bot_permissions")
    print("=" * 40)
    
    try:
        from bot_database import TelegramBotDB
        db = TelegramBotDB()
        
        test_user_id = 123456789
        
        # –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
        print("1. –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...")
        can_read = check_user_permission(test_user_id, "read", db)
        print(f"   –ß—Ç–µ–Ω–∏–µ: {'‚úÖ' if can_read else '‚ùå'}")
        
        # –¢–µ—Å—Ç –ª–∏–º–∏—Ç–∞ –∫–æ–º–∞–Ω–¥
        print("2. –¢–µ—Å—Ç –ª–∏–º–∏—Ç–∞ –∫–æ–º–∞–Ω–¥...")
        allowed, message = check_command_rate_limit(test_user_id, db)
        print(f"   –õ–∏–º–∏—Ç: {'‚úÖ' if allowed else '‚ùå'} - {message}")
        
        # –¢–µ—Å—Ç —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞
        print("3. –¢–µ—Å—Ç —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞...")
        access_level = get_user_access_level(test_user_id, db)
        print(f"   –£—Ä–æ–≤–µ–Ω—å: {access_level}")
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–æ–π–¥–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

if __name__ == "__main__":
    test_bot_permissions()